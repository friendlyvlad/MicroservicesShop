---
stages:
- name: BUILD
  inputs:
  - type: git
    branch: PipelineTest
  jobs:
  - name: Build
    type: builder
    artifact_dir: ''
    build_type: shell
    script: |-
      #!/bin/bash
      ##########
      # Colors##
      ##########
      Green='\x1B[0;32m'
      Red='\x1B[0;31m'
      Yellow='\x1B[0;33m'
      Cyan='\x1B[0;36m'
      no_color='\x1B[0m' # No Color
      beer='\xF0\x9f\x8d\xba'
      delivery='\xF0\x9F\x9A\x9A'
      beers='\xF0\x9F\x8D\xBB'
      eyes='\xF0\x9F\x91\x80'
      cloud='\xE2\x98\x81'
      crossbones='\xE2\x98\xA0'
      litter='\xF0\x9F\x9A\xAE'
      fail='\xE2\x9B\x94'
      harpoons='\xE2\x87\x8C'
      tools='\xE2\x9A\x92'
      present='\xF0\x9F\x8E\x81'
      hourglass='\xE2\x8F\xB3'
      #############
      git config --global user.email "pipeline@example.com"
      git config --global user.name "Pipeline Builder"
      ls
      export
- name: DEPLOY
  inputs:
  - type: job
    stage: BUILD
    job: Build
  triggers:
  - type: stage
  properties:
  - name: NR_KEY
    value: 'PASTE_NEW_RELIC_KEY_HERE_IF_YOU_HAVE_ONE'
    type: text
  jobs:
  - name: Services
    type: deployer
    target:
      url: ${CF_TARGET_URL}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
      application: ${CF_APP}
    script: |-
      #!/bin/bash
      ##########
      # Colors##
      ##########
      Green='\x1B[0;32m'
      Red='\x1B[0;31m'
      Yellow='\x1B[0;33m'
      Cyan='\x1B[0;36m'
      no_color='\x1B[0m' # No Color
      beer='\xF0\x9f\x8d\xba'
      delivery='\xF0\x9F\x9A\x9A'
      beers='\xF0\x9F\x8D\xBB'
      eyes='\xF0\x9F\x91\x80'
      cloud='\xE2\x98\x81'
      crossbones='\xE2\x98\xA0'
      litter='\xF0\x9F\x9A\xAE'
      fail='\xE2\x9B\x94'
      harpoons='\xE2\x87\x8C'
      tools='\xE2\x9A\x92'
      present='\xF0\x9F\x8E\x81'
      hourglass='\xE2\x8F\xB3'
      #############
      if [ -n "$(echo ${CF_TARGET_URL} | grep ng.bluemix.net)" ]; then
        echo -e "${tools}${Cyan}  Detected Region: US South${no_color}"
        export CF_REGION=US
      elif [ -n "$(echo ${CF_TARGET_URL} | grep eu-gb.bluemix.net)" ]; then
        echo -e "${tools}${Cyan}  Detected Region: United Kingdom${no_color}"
        export CF_REGION=UK
      elif [ -n "$(echo ${CF_TARGET_URL} | grep au-syd.bluemix.net)" ]; then
        echo -e "${tools}${Cyan}  Detected Region: Sydney${no_color}"
        export CF_REGION=AU
      fi
      ls
      export
      # Create CF services
      echo -e "${tools}${Cyan}  Creating Cloudant Service Instance${no_color}"
      t=0
      until [ $t -ge 5 ]
      do
        cf create-service cloudantNoSQLDB Lite myMicroservicesCloudant > /dev/null 2>&1 && break
        t=$[$t+1]
        sleep 15
      done
      echo -e "${tools}${Cyan}  Creating New Relic Service Instance${no_color}"
      t=0
      until [ $t -ge 5 ]
      do
        cf create-service newrelic standard NewRelic > /dev/null 2>&1 && break
        t=$[$t+1]
        sleep 15
      done

  - name: Applications
    type: deployer
    target:
      url: ${CF_TARGET_URL}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
      application: MicroservicesUI
    script: |-
      #!/bin/bash
      echo "Pushing OrderAPI Microservice"
      cf push MicroservicesOrdersAPI
      echo "Pushing Catalog API Microservice"
      cf push MicroservicesCatalogAPI
      echo "Getting OrderAPI URL"
      OrderURL=$(cf routes | grep -i MicroservicesOrdersAPI | awk '{print $2}')
      echo "Detected ${OrderURL}"
      echo "Getting CatalogAPI URL"
      CatalogURL=$(cf routes | grep -i MicroservicesCatalogAPI | awk '{print $2}')
      echo "Detected ${CatalogURL}"
      cf push MicroservicesUI --no-start
      cf set-env MicroservicesUI OrderURL ${OrderURL}
      cf set-env MicroservicesUI CatalogURL ${CatalogURL}
      cf start MicroservicesUI
      #cf push "${CF_APP}"
      ls
      export
      # View logs
      #cf logs "${CF_APP}" --recent
